buildscript {
  ext {
    sonarVersion = '2.7.1'
    spotlessVersion= '3.25.0'
  }
  repositories {
    maven { url "https://plugins.gradle.org/m2/" }
    mavenCentral()
    jcenter()
  }
  dependencies { classpath "com.diffplug.spotless:spotless-plugin-gradle:${spotlessVersion}" }
}

plugins {
  id "org.sonarqube" version "2.8"
  id 'jacoco' 
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'com.diffplug.gradle.spotless'

repositories {
  mavenCentral()
  jcenter()
}

archivesBaseName = 'aiml-core'
version = '1.0-SNAPSHOT'
 
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    
  implementation 'org.json:json:20160810'
  implementation 'org.apache.commons:commons-lang3:3.1'
  implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.4'
  implementation 'commons-logging:commons-logging:1.2'
  implementation 'org.reflections:reflections:0.9.10'
  
  testImplementation 'junit:junit:4.12'
  testImplementation 'org.mockito:mockito-core:2.7.22'
  testImplementation 'org.jacoco:org.jacoco.agent:0.7+'
  testImplementation 'org.jacoco:org.jacoco.ant:0.7+'
  testImplementation 'org.jacoco:org.jacoco.core:0.7+'
  testImplementation 'org.jacoco:org.jacoco.report:0.7+'
  testImplementation "org.mockito:mockito-core:2.+"
}

spotless {
  enforceCheck = false	
    java {  
      target project.fileTree(projectDir) { include '**/*.java' }
      eclipse().configFile new File("${projectDir}/CodeStyle.xml")
  }
}

test {
  finalizedBy jacocoTestReport // report is always generated after tests run
}

def TestCoverageFile = "${buildDir}/jacoco/jacoco.xml"

jacocoTestReport {
  dependsOn test
  group = "Reporting"
  reports {
    xml.enabled true
    csv.enabled false
    //to create coverage report in html
    html.destination file("${buildDir}/reports/coverage")
    //for XML
    xml.destination file(TestCoverageFile)
  }
}

sonarqube {
  properties {
    property 'sonar.organization', 'sgla-bitbucket'
    property 'sonar.projectKey', 'sgla_aiml'
    property 'sonar.core.codeCoveragePlugin', 'jacoco'
    property 'sonar.host.url', 'https://sonarcloud.io'
    property 'sonar.coverage.jacoco.xmlReportPaths', TestCoverageFile
  }
}
